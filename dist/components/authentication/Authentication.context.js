"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AuthenticationContextProvider = AuthenticationContextProvider;
exports.AuthenticationContext = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _ = require(".");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AuthenticationContext = _react.default.createContext();

exports.AuthenticationContext = AuthenticationContext;

function AuthenticationContextProvider(_ref) {
  var _config = _ref.config,
      messages = _ref.messages,
      authentication = _ref.authentication,
      onAuthentication = _ref.onAuthentication,
      loadAuthentication = _ref.loadAuthentication,
      saveAuthentication = _ref.saveAuthentication,
      children = _ref.children,
      onError = _ref.onError;

  var _useAuthentication = (0, _.useAuthentication)({
    authentication: authentication,
    onAuthentication: onAuthentication,
    config: _config,
    messages: messages,
    loadAuthentication: loadAuthentication,
    saveAuthentication: saveAuthentication,
    onError: onError
  }),
      state = _useAuthentication.state,
      actions = _useAuthentication.actions,
      component = _useAuthentication.component,
      config = _useAuthentication.config;

  var context = {
    state: state,
    actions: actions,
    component: component,
    config: config
  };
  return /*#__PURE__*/_react.default.createElement(AuthenticationContext.Provider, {
    value: context
  }, children);
}

;
AuthenticationContextProvider.propTypes = {
  /** Pass a previously returned authentication object to bypass login. */
  authentication: _propTypes.default.shape({
    user: _propTypes.default.object.isRequired,
    token: _propTypes.default.object.isRequired,
    config: _propTypes.default.object.isRequired,
    remember: _propTypes.default.bool
  }),

  /** Callback function to propogate the user/token used for API Authentication. */
  onAuthentication: _propTypes.default.func,

  /** Configuration to pass through to the Authentication component. */

  /** Override the default text and errors. Must override all or none. */
  messages: _propTypes.default.shape({
    actionText: _propTypes.default.string.isRequired,
    genericError: _propTypes.default.string.isRequired,
    usernameError: _propTypes.default.string.isRequired,
    passwordError: _propTypes.default.string.isRequired
  }),
  config: _propTypes.default.shape({
    /** The Gitea server to use when authenticating. */
    server: _propTypes.default.string.isRequired,

    /** The id of the token to create/retrieve that is used for the app. */
    tokenid: _propTypes.default.string.isRequired
  }),

  /** Callback function to persist authentication. */
  saveAuthentication: _propTypes.default.func,

  /** Callback function to retrieve persisted authentication. */
  loadAuthentication: _propTypes.default.func,

  /** optional callback for error */
  onError: _propTypes.default.func
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2F1dGhlbnRpY2F0aW9uL0F1dGhlbnRpY2F0aW9uLmNvbnRleHQuanMiXSwibmFtZXMiOlsiQXV0aGVudGljYXRpb25Db250ZXh0IiwiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwiQXV0aGVudGljYXRpb25Db250ZXh0UHJvdmlkZXIiLCJfY29uZmlnIiwiY29uZmlnIiwibWVzc2FnZXMiLCJhdXRoZW50aWNhdGlvbiIsIm9uQXV0aGVudGljYXRpb24iLCJsb2FkQXV0aGVudGljYXRpb24iLCJzYXZlQXV0aGVudGljYXRpb24iLCJjaGlsZHJlbiIsIm9uRXJyb3IiLCJzdGF0ZSIsImFjdGlvbnMiLCJjb21wb25lbnQiLCJjb250ZXh0IiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic2hhcGUiLCJ1c2VyIiwib2JqZWN0IiwiaXNSZXF1aXJlZCIsInRva2VuIiwicmVtZW1iZXIiLCJib29sIiwiZnVuYyIsImFjdGlvblRleHQiLCJzdHJpbmciLCJnZW5lcmljRXJyb3IiLCJ1c2VybmFtZUVycm9yIiwicGFzc3dvcmRFcnJvciIsInNlcnZlciIsInRva2VuaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7QUFFTyxJQUFNQSxxQkFBcUIsR0FBR0MsZUFBTUMsYUFBTixFQUE5Qjs7OztBQUVBLFNBQVNDLDZCQUFULE9BU0o7QUFBQSxNQVJPQyxPQVFQLFFBUkRDLE1BUUM7QUFBQSxNQVBEQyxRQU9DLFFBUERBLFFBT0M7QUFBQSxNQU5EQyxjQU1DLFFBTkRBLGNBTUM7QUFBQSxNQUxEQyxnQkFLQyxRQUxEQSxnQkFLQztBQUFBLE1BSkRDLGtCQUlDLFFBSkRBLGtCQUlDO0FBQUEsTUFIREMsa0JBR0MsUUFIREEsa0JBR0M7QUFBQSxNQUZEQyxRQUVDLFFBRkRBLFFBRUM7QUFBQSxNQUREQyxPQUNDLFFBRERBLE9BQ0M7O0FBQUEsMkJBR0cseUJBQWtCO0FBQ3BCTCxJQUFBQSxjQUFjLEVBQWRBLGNBRG9CO0FBRXBCQyxJQUFBQSxnQkFBZ0IsRUFBaEJBLGdCQUZvQjtBQUdwQkgsSUFBQUEsTUFBTSxFQUFFRCxPQUhZO0FBSXBCRSxJQUFBQSxRQUFRLEVBQVJBLFFBSm9CO0FBS3BCRyxJQUFBQSxrQkFBa0IsRUFBbEJBLGtCQUxvQjtBQU1wQkMsSUFBQUEsa0JBQWtCLEVBQWxCQSxrQkFOb0I7QUFPcEJFLElBQUFBLE9BQU8sRUFBUEE7QUFQb0IsR0FBbEIsQ0FISDtBQUFBLE1BRUNDLEtBRkQsc0JBRUNBLEtBRkQ7QUFBQSxNQUVRQyxPQUZSLHNCQUVRQSxPQUZSO0FBQUEsTUFFaUJDLFNBRmpCLHNCQUVpQkEsU0FGakI7QUFBQSxNQUU0QlYsTUFGNUIsc0JBRTRCQSxNQUY1Qjs7QUFZRCxNQUFNVyxPQUFPLEdBQUc7QUFDZEgsSUFBQUEsS0FBSyxFQUFMQSxLQURjO0FBRWRDLElBQUFBLE9BQU8sRUFBUEEsT0FGYztBQUdkQyxJQUFBQSxTQUFTLEVBQVRBLFNBSGM7QUFJZFYsSUFBQUEsTUFBTSxFQUFOQTtBQUpjLEdBQWhCO0FBT0Esc0JBQ0UsNkJBQUMscUJBQUQsQ0FBdUIsUUFBdkI7QUFBZ0MsSUFBQSxLQUFLLEVBQUVXO0FBQXZDLEtBQ0dMLFFBREgsQ0FERjtBQUtEOztBQUFBO0FBRURSLDZCQUE2QixDQUFDYyxTQUE5QixHQUEwQztBQUN4QztBQUNBVixFQUFBQSxjQUFjLEVBQUVXLG1CQUFVQyxLQUFWLENBQWdCO0FBQzlCQyxJQUFBQSxJQUFJLEVBQUVGLG1CQUFVRyxNQUFWLENBQWlCQyxVQURPO0FBRTlCQyxJQUFBQSxLQUFLLEVBQUVMLG1CQUFVRyxNQUFWLENBQWlCQyxVQUZNO0FBRzlCakIsSUFBQUEsTUFBTSxFQUFFYSxtQkFBVUcsTUFBVixDQUFpQkMsVUFISztBQUk5QkUsSUFBQUEsUUFBUSxFQUFFTixtQkFBVU87QUFKVSxHQUFoQixDQUZ3Qjs7QUFReEM7QUFDQWpCLEVBQUFBLGdCQUFnQixFQUFFVSxtQkFBVVEsSUFUWTs7QUFVeEM7O0FBQ0E7QUFDQXBCLEVBQUFBLFFBQVEsRUFBRVksbUJBQVVDLEtBQVYsQ0FBZ0I7QUFDeEJRLElBQUFBLFVBQVUsRUFBRVQsbUJBQVVVLE1BQVYsQ0FBaUJOLFVBREw7QUFFeEJPLElBQUFBLFlBQVksRUFBRVgsbUJBQVVVLE1BQVYsQ0FBaUJOLFVBRlA7QUFHeEJRLElBQUFBLGFBQWEsRUFBRVosbUJBQVVVLE1BQVYsQ0FBaUJOLFVBSFI7QUFJeEJTLElBQUFBLGFBQWEsRUFBRWIsbUJBQVVVLE1BQVYsQ0FBaUJOO0FBSlIsR0FBaEIsQ0FaOEI7QUFrQnhDakIsRUFBQUEsTUFBTSxFQUFFYSxtQkFBVUMsS0FBVixDQUFnQjtBQUN0QjtBQUNBYSxJQUFBQSxNQUFNLEVBQUVkLG1CQUFVVSxNQUFWLENBQWlCTixVQUZIOztBQUd0QjtBQUNBVyxJQUFBQSxPQUFPLEVBQUVmLG1CQUFVVSxNQUFWLENBQWlCTjtBQUpKLEdBQWhCLENBbEJnQzs7QUF3QnhDO0FBQ0FaLEVBQUFBLGtCQUFrQixFQUFFUSxtQkFBVVEsSUF6QlU7O0FBMEJ4QztBQUNBakIsRUFBQUEsa0JBQWtCLEVBQUVTLG1CQUFVUSxJQTNCVTs7QUE0QnhDO0FBQ0FkLEVBQUFBLE9BQU8sRUFBRU0sbUJBQVVRO0FBN0JxQixDQUExQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgeyB1c2VBdXRoZW50aWNhdGlvbiB9IGZyb20gJy4nO1xuXG5leHBvcnQgY29uc3QgQXV0aGVudGljYXRpb25Db250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCgpO1xuXG5leHBvcnQgZnVuY3Rpb24gQXV0aGVudGljYXRpb25Db250ZXh0UHJvdmlkZXIoe1xuICBjb25maWc6IF9jb25maWcsXG4gIG1lc3NhZ2VzLFxuICBhdXRoZW50aWNhdGlvbixcbiAgb25BdXRoZW50aWNhdGlvbixcbiAgbG9hZEF1dGhlbnRpY2F0aW9uLFxuICBzYXZlQXV0aGVudGljYXRpb24sXG4gIGNoaWxkcmVuLFxuICBvbkVycm9yLFxufSkge1xuICBjb25zdCB7XG4gICAgc3RhdGUsIGFjdGlvbnMsIGNvbXBvbmVudCwgY29uZmlnLFxuICB9ID0gdXNlQXV0aGVudGljYXRpb24oe1xuICAgIGF1dGhlbnRpY2F0aW9uLFxuICAgIG9uQXV0aGVudGljYXRpb24sXG4gICAgY29uZmlnOiBfY29uZmlnLFxuICAgIG1lc3NhZ2VzLFxuICAgIGxvYWRBdXRoZW50aWNhdGlvbixcbiAgICBzYXZlQXV0aGVudGljYXRpb24sXG4gICAgb25FcnJvcixcbiAgfSk7XG4gIGNvbnN0IGNvbnRleHQgPSB7XG4gICAgc3RhdGUsXG4gICAgYWN0aW9ucyxcbiAgICBjb21wb25lbnQsXG4gICAgY29uZmlnLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEF1dGhlbnRpY2F0aW9uQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17Y29udGV4dH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9BdXRoZW50aWNhdGlvbkNvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5BdXRoZW50aWNhdGlvbkNvbnRleHRQcm92aWRlci5wcm9wVHlwZXMgPSB7XG4gIC8qKiBQYXNzIGEgcHJldmlvdXNseSByZXR1cm5lZCBhdXRoZW50aWNhdGlvbiBvYmplY3QgdG8gYnlwYXNzIGxvZ2luLiAqL1xuICBhdXRoZW50aWNhdGlvbjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICB1c2VyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgdG9rZW46IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBjb25maWc6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICByZW1lbWJlcjogUHJvcFR5cGVzLmJvb2wsXG4gIH0pLFxuICAvKiogQ2FsbGJhY2sgZnVuY3Rpb24gdG8gcHJvcG9nYXRlIHRoZSB1c2VyL3Rva2VuIHVzZWQgZm9yIEFQSSBBdXRoZW50aWNhdGlvbi4gKi9cbiAgb25BdXRoZW50aWNhdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gIC8qKiBDb25maWd1cmF0aW9uIHRvIHBhc3MgdGhyb3VnaCB0byB0aGUgQXV0aGVudGljYXRpb24gY29tcG9uZW50LiAqL1xuICAvKiogT3ZlcnJpZGUgdGhlIGRlZmF1bHQgdGV4dCBhbmQgZXJyb3JzLiBNdXN0IG92ZXJyaWRlIGFsbCBvciBub25lLiAqL1xuICBtZXNzYWdlczogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBhY3Rpb25UZXh0OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgZ2VuZXJpY0Vycm9yOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgdXNlcm5hbWVFcnJvcjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIHBhc3N3b3JkRXJyb3I6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgfSksXG4gIGNvbmZpZzogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAvKiogVGhlIEdpdGVhIHNlcnZlciB0byB1c2Ugd2hlbiBhdXRoZW50aWNhdGluZy4gKi9cbiAgICBzZXJ2ZXI6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICAvKiogVGhlIGlkIG9mIHRoZSB0b2tlbiB0byBjcmVhdGUvcmV0cmlldmUgdGhhdCBpcyB1c2VkIGZvciB0aGUgYXBwLiAqL1xuICAgIHRva2VuaWQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgfSksXG4gIC8qKiBDYWxsYmFjayBmdW5jdGlvbiB0byBwZXJzaXN0IGF1dGhlbnRpY2F0aW9uLiAqL1xuICBzYXZlQXV0aGVudGljYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAvKiogQ2FsbGJhY2sgZnVuY3Rpb24gdG8gcmV0cmlldmUgcGVyc2lzdGVkIGF1dGhlbnRpY2F0aW9uLiAqL1xuICBsb2FkQXV0aGVudGljYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAvKiogb3B0aW9uYWwgY2FsbGJhY2sgZm9yIGVycm9yICovXG4gIG9uRXJyb3I6IFByb3BUeXBlcy5mdW5jLFxufTtcbiJdfQ==